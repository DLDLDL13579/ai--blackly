import numpy as np
import librosa
from sklearn.mixture import GaussianMixture
from sklearn.metrics import accuracy_score
import os

# 加载音频文件并提取MFCC特征
def extract_mfcc(file_path, sr=16000, n_mfcc=13):
    y, sr = librosa.load(file_path, sr=sr)
    mfccs = librosa.feature.mfcc(y=y, sr=sr, n_mfcc=n_mfcc)
    # 取MFCC特征的均值作为该音频的特征向量
    mean_mfcc = np.mean(mfccs.T, axis=0)
    return mean_mfcc

# 加载数据集
def load_dataset(data_dir):
    X = []
    y = []
    for label in range(10):
        label_dir = os.path.join(data_dir, f'{label}')
        for file_name in os.listdir(label_dir):
            file_path = os.path.join(label_dir, file_name)
            mfcc = extract_mfcc(file_path)
            X.append(mfcc)
            y.append(label)
    return np.array(X), np.array(y)

# 训练GMM模型
def train_gmm(X, y, n_components=16):
    models = []
    for label in range(10):
        label_data = X[y == label]
        gmm = GaussianMixture(n_components=n_components, covariance_type='full').fit(label_data)
        models.append(gmm)
    return models

# 预测标签
def predict(X, models):
    predictions = []
    for x in X:
        scores = []
        for model in models:
            score = model.score_samples([x])[0]
            scores.append(score)
        predicted_label = np.argmax(scores)
        predictions.append(predicted_label)
    return np.array(predictions)

# 主函数
if __name__ == "__main__":
    data_dir = 'D:/Blockly-AI-Program/sourcecode/datasets/wav0-9'  # 替换为你的数据集路径
    X_train, y_train = load_dataset(os.path.join(data_dir, 'train'))
    X_test, y_test = load_dataset(os.path.join(data_dir, 'test'))

    models = train_gmm(X_train, y_train)
    y_pred = predict(X_test, models)

    accuracy = accuracy_score(y_test, y_pred)
    print(f"Accuracy: {accuracy:.2f}")